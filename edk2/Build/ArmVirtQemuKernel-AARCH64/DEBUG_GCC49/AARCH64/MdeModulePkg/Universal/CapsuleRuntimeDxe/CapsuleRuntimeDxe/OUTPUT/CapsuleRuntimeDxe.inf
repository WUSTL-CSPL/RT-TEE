## @file
#  Capsule Runtime Driver produces two UEFI capsule runtime services: (UpdateCapsule, QueryCapsuleCapabilities).
#
#  It installs the Capsule Architectural Protocol defined in PI1.0a to signify
#  the capsule runtime services are ready.
#
#  Copyright (c) 2006 - 2018, Intel Corporation. All rights reserved.<BR>
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution.  The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = CapsuleRuntimeDxe
  FILE_GUID                  = 42857F0A-13F2-4B21-8A23-53D3F714B840
  MODULE_TYPE                = DXE_RUNTIME_DRIVER
  VERSION_STRING             = 1.0
  ENTRY_POINT                = CapsuleServiceInitialize
  MODULE_UNI_FILE            = CapsuleRuntimeDxe.uni

[Packages.AARCH64]
  MdePkg/MdePkg.dec
  MdeModulePkg/MdeModulePkg.dec
  ArmVirtPkg/ArmVirtPkg.dec

[Binaries.AARCH64]
  PE32|CapsuleRuntimeDxe.efi

[PatchPcd.AARCH64]

[Protocols.AARCH64]
  ## PRODUCES
  gEfiCapsuleArchProtocolGuid

  ## SOMETIMES_CONSUMES
  gPcdProtocolGuid

  ## CONSUMES
  gEfiPcdProtocolGuid

  ## SOMETIMES_CONSUMES
  gGetPcdInfoProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiGetPcdInfoProtocolGuid

  gEfiCpuArchProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiLoadedImageProtocolGuid


[Ppis.AARCH64]

[Guids.AARCH64]
  ## SOMETIMES_PRODUCES   ## Variable:L"CapsuleUpdateData" # (Process across reset capsule image) for capsule updated data
  ## SOMETIMES_PRODUCES   ## Variable:L"CapsuleLongModeBuffer" # The long mode buffer used by IA32 Capsule PEIM to call X64 CapsuleCoalesce code to handle >4GB capsule blocks
  gEfiCapsuleVendorGuid

  ## SOMETIMES_CONSUMES   ## GUID # FMP capsule GUID
  gEfiFmpCapsuleGuid

  ## CONSUMES  ## SystemTable
  gEfiHobListGuid

  gEarlyPL011BaseAddressGuid

  ## CONSUMES ## Event
  ## CONSUMES ## Event
  gEfiEventExitBootServicesGuid

  ## CONSUMES ## Event
  gEfiEventVirtualAddressChangeGuid


[PcdEx.AARCH64]

[LibraryClasses.AARCH64]
## @LIB_INSTANCES
#  MdePkg/Library/BaseMemoryLibOptDxe/BaseMemoryLibOptDxe.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/DxePcdLib/DxePcdLib.inf
#  MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsicArmVirt.inf
#  ArmVirtPkg/Library/ArmVirtDxeHobLib/ArmVirtDxeHobLib.inf
#  ArmPlatformPkg/Library/PL011UartLib/PL011UartLib.inf
#  ArmVirtPkg/Library/FdtPL011SerialPortLib/FdtPL011SerialPortLib.inf
#  MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib.inf
#  MdePkg/Library/BasePrintLib/BasePrintLib.inf
#  MdePkg/Library/DxeRuntimeDebugLibSerialPort/DxeRuntimeDebugLibSerialPort.inf
#  MdePkg/Library/UefiBootServicesTableLib/UefiBootServicesTableLib.inf
#  MdePkg/Library/UefiRuntimeServicesTableLib/UefiRuntimeServicesTableLib.inf
#  ArmPkg/Library/ArmLib/ArmBaseLib.inf
#  MdePkg/Library/UefiDriverEntryPoint/UefiDriverEntryPoint.inf
#  MdeModulePkg/Library/DxeCapsuleLibNull/DxeCapsuleLibNull.inf
#  MdePkg/Library/UefiRuntimeLib/UefiRuntimeLib.inf
#  ArmPkg/Library/ArmCacheMaintenanceLib/ArmCacheMaintenanceLib.inf
#  ArmPkg/Library/CompilerIntrinsicsLib/CompilerIntrinsicsLib.inf
#  MdePkg/Library/BaseStackCheckLib/BaseStackCheckLib.inf

[Depex.AARCH64]
#  (gEfiVariableWriteArchProtocolGuid             # Depends on variable write functionality to produce capsule data variable) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiBdsArchProtocolGuid AND gEfiCpuArchProtocolGuid AND gEfiMetronomeArchProtocolGuid AND gEfiMonotonicCounterArchProtocolGuid AND gEfiRealTimeClockArchProtocolGuid AND gEfiResetArchProtocolGuid AND gEfiRuntimeArchProtocolGuid AND gEfiSecurityArchProtocolGuid AND gEfiTimerArchProtocolGuid AND gEfiVariableWriteArchProtocolGuid AND gEfiVariableArchProtocolGuid AND gEfiWatchdogTimerArchProtocolGuid)

[UserExtensions.TianoCore."ExtraFiles"]
CapsuleRuntimeDxeExtra.uni



#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64 IPF EBC ARM AARCH64
#
# [Hob.X64]
# UNDEFINED                 ## SOMETIMES_CONSUMES # CPU

[BuildOptions.AARCH64]
## @AsBuilt
##   GCC:DEBUG_GCC49_AARCH64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:DEBUG_GCC49_AARCH64_OPTROM_FLAGS = -e
##   GCC:DEBUG_GCC49_AARCH64_ASLDLINK_FLAGS = -Wl,--emit-relocs -nostdlib -Wl,--gc-sections -u $(IMAGE_ENTRY_POINT) -Wl,-e,$(IMAGE_ENTRY_POINT),-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map -z common-page-size=0x20 -Wl,--entry,ReferenceAcpiTable -u $(IMAGE_ENTRY_POINT) -Wl,--defsym=PECOFF_HEADER_SIZE=0 -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -z common-page-size=0x20
##   GCC:DEBUG_GCC49_AARCH64_VFR_FLAGS = -l -n
##   GCC:DEBUG_GCC49_AARCH64_PP_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
##   GCC:DEBUG_GCC49_AARCH64_GENFW_FLAGS = 
##   GCC:DEBUG_GCC49_AARCH64_PLATFORM_FLAGS = 
##   GCC:DEBUG_GCC49_AARCH64_RC_FLAGS = -I binary -O elf64-littleaarch64 -B aarch64 --rename-section .data=.hii
##   GCC:DEBUG_GCC49_AARCH64_DTC_FLAGS = -H epapr
##   GCC:DEBUG_GCC49_AARCH64_ASM_FLAGS = $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h -mlittle-endian
##   GCC:DEBUG_GCC49_AARCH64_ASL_FLAGS = 
##   GCC:DEBUG_GCC49_AARCH64_CC_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -g -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -ffunction-sections -fdata-sections -include AutoGen.h -fno-common -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -include AutoGen.h -fno-common -mlittle-endian -fno-short-enums -fverbose-asm -funsigned-char  -ffunction-sections -fdata-sections -Wno-address -fno-asynchronous-unwind-tables -fno-unwind-tables -fno-pic -fno-pie -ffixed-x18 -O0 -mcmodel=small -DDISABLE_NEW_DEPRECATED_INTERFACES
##   GCC:DEBUG_GCC49_AARCH64_NASMB_FLAGS = -f bin
##   GCC:DEBUG_GCC49_AARCH64_VFRPP_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
##   GCC:DEBUG_GCC49_AARCH64_DTCPP_FLAGS = -E -x assembler-with-cpp -imacros $(DEST_DIR_DEBUG)/AutoGen.h -nostdinc -undef
##   GCC:DEBUG_GCC49_AARCH64_ASLCC_FLAGS = -x c
##   GCC:DEBUG_GCC49_AARCH64_DLINK2_FLAGS = -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -Wl,--defsym=PECOFF_HEADER_SIZE=0x228
##   GCC:DEBUG_GCC49_AARCH64_DLINK_FLAGS = -Wl,--emit-relocs -nostdlib -Wl,--gc-sections -u $(IMAGE_ENTRY_POINT) -Wl,-e,$(IMAGE_ENTRY_POINT),-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map -z common-page-size=0x20 -z common-page-size=0x1000 -z common-page-size=0x10000
##   GCC:DEBUG_GCC49_AARCH64_ASLPP_FLAGS = -x c -E -include AutoGen.h
##   GCC:DEBUG_GCC49_AARCH64_OBJCOPY_FLAGS = objcopy not needed for
##   GCC:DEBUG_GCC49_AARCH64_APP_FLAGS = 
##   GCC:DEBUG_GCC49_AARCH64_ASMLINK_FLAGS = /nologo /tiny
