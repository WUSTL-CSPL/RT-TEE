


















.globl EbcLLCALLEXNative
.globl EbcLLEbcInterpret
.globl EbcLLExecuteEbcImageEntryPoint

.globl mEbcInstructionBufferTemplate












EbcLLCALLEXNative:
    mov x8, x0
    mov x9, x1







    sub x3, x2, x1
    cmp x3, #64
    b.gt 1f








    adr x0, 0f
    bic x3, x3, #7
    sub x0, x0, x3, lsr #1
    br x0

    ldr x7, [x9, #56]
    ldr x6, [x9, #48]
    ldr x5, [x9, #40]
    ldr x4, [x9, #32]
    ldr x3, [x9, #24]
    ldr x2, [x9, #16]
    ldr x1, [x9, #8]
    ldr x0, [x9]

0: br x8






1: stp x29, x30, [sp, #-16]!
    mov x29, sp





    add x1, x1, #64
    tbz x3, #3, 2f
    ldr x4, [x2, #-8]!
    str x4, [sp, #-16]!
    b 3f

2: ldp x4, x5, [x2, #-16]!
    stp x4, x5, [sp, #-16]!
3: cmp x2, x1
    b.gt 2b

    ldp x0, x1, [x9]
    ldp x2, x3, [x9, #16]
    ldp x4, x5, [x9, #32]
    ldp x6, x7, [x9, #48]

    blr x8

    mov sp, x29
    ldp x29, x30, [sp], #16
    ret










EbcLLEbcInterpret:
    stp x29, x30, [sp, #-16]!
    mov x29, sp


    add x17, sp, #16
    stp x16, x17, [sp, #-16]!


    bl EbcInterpret

    add sp, sp, #16
    ldp x29, x30, [sp], #16
    ret









EbcLLExecuteEbcImageEntryPoint:
    mov x2, x16


    b ExecuteEbcImageEntryPoint




    .section ".rodata", "a"
    .align 3
mEbcInstructionBufferTemplate:
    adr x17, 0f
    ldp x16, x17, [x17]
    br x17




    hlt #0xEBC

0: .quad 0
    .quad 0
