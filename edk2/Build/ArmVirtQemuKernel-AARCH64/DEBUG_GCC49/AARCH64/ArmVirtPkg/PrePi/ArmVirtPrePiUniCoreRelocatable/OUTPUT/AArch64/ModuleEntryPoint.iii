















.global _ModuleEntryPoint ; .section ".text._ModuleEntryPoint", "ax" ; .type _ModuleEntryPoint, %function ; _ModuleEntryPoint:






  adr x8, __reloc_base
  adr x9, __reloc_start
  adr x10, __reloc_end

.Lreloc_loop:
  cmp x9, x10
  bhs .Lreloc_done











  ldp x11, x12, [x9], #24
  cmp x12, #0x403
  bne .Lreloc_loop

  ldr x12, [x9, #-8]
  add x12, x12, x8
  str x12, [x11, x8]
  b .Lreloc_loop
.Lreloc_done:

  bl DiscoverDramFromDt


  bl ArmReadMpidr

  mov x20, x0




_SetupStackPosition:

  ldr x1, _gPcd_BinaryPatch_PcdSystemMemoryBase
  ldr x2, _gPcd_BinaryPatch_PcdSystemMemorySize
  sub x2, x2, #1
  add x1, x1, x2


  ldr x2, _gPcd_BinaryPatch_PcdFdBaseAddress
  movz w3, (0x00200000 - 1) >> 16, lsl #16 ; movk w3, (0x00200000 - 1) & 0xffff
  add x3, x3, x2


  movz x4, (0x04000000) >> 16, lsl #16 ; movk x4, (0x04000000) & 0xffff






  subs x0, x1, x3
  b.mi _SetupStack
  cmp x0, x4
  b.ge _SetupStack


  mov x1, x2

_SetupStack:





  adds x21, x1, #1
  b.cs _SetupOverflowStack

_SetupAlignedStack:
  mov x1, x21
  b _GetBaseUefiMemory

_SetupOverflowStack:


  and x1, x1, ~0xFFF

_GetBaseUefiMemory:

  sub x21, x1, x4

_GetStackBase:

  mov sp, x1


  movz x2, (0x4000) >> 16, lsl #16 ; movk x2, (0x4000) & 0xffff
  sub x22, x1, x2

  mov x0, x20
  mov x1, x21
  mov x2, x22





  bl CEntryPoint

_NeverReturn:
  b _NeverReturn






DiscoverDramFromDt:





  cbnz x0, 0f
  ldr x0, _gPcd_BinaryPatch_PcdDeviceTreeInitialBaseAddress

0:mov x29, x30
  mov x28, x0
  mov x27, x1





  ldr w8, .LArm64LinuxMagic
  ldr w9, [x1, #0x38]
  cmp w8, w9
  bne .Lout








  adr x8, _gPcd_BinaryPatch_PcdFdBaseAddress
  adr x9, _gPcd_BinaryPatch_PcdFvBaseAddress
  ldr x6, [x8]
  ldr x7, [x9]
  sub x7, x7, x6
  add x7, x7, x1
  str x1, [x8]
  str x7, [x9]







  adr x1, _gPcd_BinaryPatch_PcdSystemMemoryBase
  adr x2, _gPcd_BinaryPatch_PcdSystemMemorySize
  mov sp, x7
  bl FindMemnode
  cbz x0, .Lout






  adr x8, _gPcd_BinaryPatch_PcdDeviceTreeInitialBaseAddress
  add x27, x27, #0x40
  str x27, [x8]

  mov x0, x27
  mov x1, x28
  bl CopyFdt

.Lout:
  ret x29

.LArm64LinuxMagic:
  .byte 0x41, 0x52, 0x4d, 0x64
