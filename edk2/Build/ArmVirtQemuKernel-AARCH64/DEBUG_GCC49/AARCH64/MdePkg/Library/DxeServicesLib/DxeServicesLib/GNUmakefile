#
# DO NOT EDIT
# This file is auto-generated by build utility
#
# Module Name:
#
#   GNUmakefile
#
# Abstract:
#
#   Auto-generated makefile for building modules, libraries or platform
#
    

#
# Platform Macro Definition
#
PLATFORM_NAME = ArmVirtQemu
PLATFORM_GUID = 37d7e986-f7e9-45c2-8067-e371421a626c
PLATFORM_VERSION = 0.1
PLATFORM_RELATIVE_DIR = ArmVirtPkg
PLATFORM_DIR = /home/osboxes/fix_rttee_text/RT-TEE/edk2/ArmVirtPkg
PLATFORM_OUTPUT_DIR = Build/ArmVirtQemuKernel-AARCH64

#
# Module Macro Definition
#
MODULE_NAME = DxeServicesLib
MODULE_GUID = EE680C58-FFC0-4a5d-858F-66FF9C84BC9F
MODULE_NAME_GUID = DxeServicesLib
MODULE_VERSION = 1.0
MODULE_TYPE = DXE_DRIVER
MODULE_FILE = DxeServicesLib.inf
MODULE_FILE_BASE_NAME = DxeServicesLib
BASE_NAME = $(MODULE_NAME)
MODULE_RELATIVE_DIR = MdePkg/Library/DxeServicesLib
PACKAGE_RELATIVE_DIR = Library/DxeServicesLib
MODULE_DIR = /home/osboxes/fix_rttee_text/RT-TEE/edk2/MdePkg/Library/DxeServicesLib
FFS_OUTPUT_DIR = /home/osboxes/fix_rttee_text/RT-TEE/edk2/Build/ArmVirtQemuKernel-AARCH64/DEBUG_GCC49/FV/Ffs/EE680C58-FFC0-4a5d-858F-66FF9C84BC9FDxeServicesLib

MODULE_ENTRY_POINT = _ModuleEntryPoint
ARCH_ENTRY_POINT = _ModuleEntryPoint
IMAGE_ENTRY_POINT = _ModuleEntryPoint

INF_VERSION = 0x00010005
BASE_NAME = DxeServicesLib
MODULE_UNI_FILE = DxeServicesLib.uni
FILE_GUID = EE680C58-FFC0-4a5d-858F-66FF9C84BC9F
MODULE_TYPE = DXE_DRIVER
VERSION_STRING = 1.0

#
# Build Configuration Macro Definition
#
ARCH = AARCH64
TOOLCHAIN = GCC49
TOOLCHAIN_TAG = GCC49
TARGET = DEBUG

#
# Build Directory Macro Definition
#
# PLATFORM_BUILD_DIR = /home/osboxes/fix_rttee_text/RT-TEE/edk2/Build/ArmVirtQemuKernel-AARCH64/DEBUG_GCC49
BUILD_DIR = /home/osboxes/fix_rttee_text/RT-TEE/edk2/Build/ArmVirtQemuKernel-AARCH64/DEBUG_GCC49
BIN_DIR = $(BUILD_DIR)/AARCH64
LIB_DIR = $(BIN_DIR)
MODULE_BUILD_DIR = /home/osboxes/fix_rttee_text/RT-TEE/edk2/Build/ArmVirtQemuKernel-AARCH64/DEBUG_GCC49/AARCH64/MdePkg/Library/DxeServicesLib/DxeServicesLib
OUTPUT_DIR = /home/osboxes/fix_rttee_text/RT-TEE/edk2/Build/ArmVirtQemuKernel-AARCH64/DEBUG_GCC49/AARCH64/MdePkg/Library/DxeServicesLib/DxeServicesLib/OUTPUT
DEBUG_DIR = /home/osboxes/fix_rttee_text/RT-TEE/edk2/Build/ArmVirtQemuKernel-AARCH64/DEBUG_GCC49/AARCH64/MdePkg/Library/DxeServicesLib/DxeServicesLib/DEBUG
DEST_DIR_OUTPUT = $(OUTPUT_DIR)
DEST_DIR_DEBUG = $(DEBUG_DIR)

#
# Shell Command Macro
#
RD = rm -r -f
RM = rm -f
MD = mkdir -p
CP = cp -f
MV = mv -f


#
# Tools definitions specific to this module
#

SYMRENAME = echo
SYMRENAME_FLAGS = Symbol renaming not needed for

OPTROM = EfiRom
OPTROM_FLAGS = -e

ASLDLINK = /home/osboxes/fix_rttee_text/RT-TEE/build/../toolchains/aarch64/bin/aarch64-linux-gnu-gcc
ASLDLINK_FLAGS = -Wl,--emit-relocs -nostdlib -Wl,--gc-sections -u $(IMAGE_ENTRY_POINT) -Wl,-e,$(IMAGE_ENTRY_POINT),-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map -z common-page-size=0x20 -Wl,--entry,ReferenceAcpiTable -u $(IMAGE_ENTRY_POINT) -Wl,--defsym=PECOFF_HEADER_SIZE=0 -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -z common-page-size=0x20


RSA2048SHA256SIGN = Rsa2048Sha256Sign
RSA2048SHA256SIGN_GUID =  A7717414-C616-4977-9420-844712A735BF


VFR = VfrCompile
VFR_FLAGS = -l -n

PP = /home/osboxes/fix_rttee_text/RT-TEE/build/../toolchains/aarch64/bin/aarch64-linux-gnu-gcc
PP_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h

LZMAF86 = LzmaF86Compress
LZMAF86_GUID =  D42AE6BD-1352-4bfb-909A-CA72A6EAE889



GENFW = GenFw
GENFW_FLAGS = 


SLINK = /home/osboxes/fix_rttee_text/RT-TEE/build/../toolchains/aarch64/bin/aarch64-linux-gnu-ar


PLATFORM_FLAGS = 

RC = /home/osboxes/fix_rttee_text/RT-TEE/build/../toolchains/aarch64/bin/aarch64-linux-gnu-objcopy
RC_FLAGS = -I binary -O elf64-littleaarch64 -B aarch64 --rename-section .data=.hii

DTC = dtc
DTC_FLAGS = -H epapr


PKCS7SIGN = Pkcs7Sign
PKCS7SIGN_GUID =  4AAFD29D-68DF-49EE-8AA9-347D375665A7

ASM = /home/osboxes/fix_rttee_text/RT-TEE/build/../toolchains/aarch64/bin/aarch64-linux-gnu-gcc
ASM_FLAGS = $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h -mlittle-endian

ASL = iasl
ASL_FLAGS = 
ASL_OUTFLAGS =  -p



CC_XIPFLAGS =  -mstrict-align -mgeneral-regs-only
CC = /home/osboxes/fix_rttee_text/RT-TEE/build/../toolchains/aarch64/bin/aarch64-linux-gnu-gcc
CC_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -g -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -ffunction-sections -fdata-sections -include AutoGen.h -fno-common -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -include AutoGen.h -fno-common -mlittle-endian -fno-short-enums -fverbose-asm -funsigned-char -ffunction-sections -fdata-sections -Wno-address -fno-asynchronous-unwind-tables -fno-unwind-tables -fno-pic -fno-pie -ffixed-x18 -O0 -mcmodel=small -DDISABLE_NEW_DEPRECATED_INTERFACES

NASMB_FLAGS = -f bin

VFRPP = /home/osboxes/fix_rttee_text/RT-TEE/build/../toolchains/aarch64/bin/aarch64-linux-gnu-gcc
VFRPP_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h

BROTLI = BrotliCompress
BROTLI_GUID =  3D532050-5CDA-4FD0-879E-0F7F630D5AFB



DTCPP = cpp
DTCPP_FLAGS = -E -x assembler-with-cpp -imacros $(DEST_DIR_DEBUG)/AutoGen.h -nostdinc -undef

LZMA = LzmaCompress
LZMA_GUID =  EE4E5898-3914-4259-9D6E-DC7BD79403CF


ASLCC = /home/osboxes/fix_rttee_text/RT-TEE/build/../toolchains/aarch64/bin/aarch64-linux-gnu-gcc
ASLCC_FLAGS = -x c


MAKE = make

DLINK2_FLAGS = -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -Wl,--defsym=PECOFF_HEADER_SIZE=0x228

DLINK_XIPFLAGS =  -z common-page-size=0x20
DLINK = /home/osboxes/fix_rttee_text/RT-TEE/build/../toolchains/aarch64/bin/aarch64-linux-gnu-gcc
DLINK_FLAGS = -Wl,--emit-relocs -nostdlib -Wl,--gc-sections -u $(IMAGE_ENTRY_POINT) -Wl,-e,$(IMAGE_ENTRY_POINT),-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map -z common-page-size=0x20 -z common-page-size=0x1000 -z common-page-size=0x1000

TIANO = TianoCompress
TIANO_GUID =  A31280AD-481E-41B6-95E8-127F4C984779

VPDTOOL = BPDG
VPDTOOL_GUID =  8C3D856A-9BE6-468E-850A-24F7A8D38E08

CRC32 = GenCrc32
CRC32_GUID =  FC1BCDB0-7D31-49AA-936A-A4600D9DD083

ASLPP = /home/osboxes/fix_rttee_text/RT-TEE/build/../toolchains/aarch64/bin/aarch64-linux-gnu-gcc
ASLPP_FLAGS = -x c -E -include AutoGen.h

OBJCOPY_ADDDEBUGFLAG =  --add-gnu-debuglink=$(DEBUG_DIR)/$(MODULE_NAME).debug
OBJCOPY = echo
OBJCOPY_FLAGS = objcopy not needed for

APP_FLAGS = 

ASMLINK = bin16\link16.exe
ASMLINK_FLAGS = /nologo /tiny

NASM = nasm


MAKE_FILE = $(MODULE_BUILD_DIR)/GNUmakefile

#
# Build Macro
#
OBJECT_FILES =  \
    $(OUTPUT_DIR)/DxeServicesLib.obj \
    $(OUTPUT_DIR)/Allocate.obj

INC =  \
    -I$(WORKSPACE)/MdePkg/Library/DxeServicesLib \
    -I$(DEBUG_DIR) \
    -I$(WORKSPACE)/MdePkg \
    -I$(WORKSPACE)/MdePkg/Include \
    -I$(WORKSPACE)/MdePkg/Include/AArch64

OBJECT_FILES_LIST = /home/osboxes/fix_rttee_text/RT-TEE/edk2/Build/ArmVirtQemuKernel-AARCH64/DEBUG_GCC49/AARCH64/MdePkg/Library/DxeServicesLib/DxeServicesLib/OUTPUT/object_files.lst


COMMON_DEPS = $(WORKSPACE)/MdePkg/Include/Protocol/SimpleTextIn.h \
              $(WORKSPACE)/MdePkg/Include/Guid/HiiFormMapMethodGuid.h \
              $(WORKSPACE)/MdePkg/Include/Uefi/UefiInternalFormRepresentation.h \
              $(WORKSPACE)/MdePkg/Include/Pi/PiFirmwareVolume.h \
              $(WORKSPACE)/MdePkg/Include/Guid/WinCertificate.h \
              $(WORKSPACE)/MdePkg/Include/IndustryStandard/Acpi10.h \
              $(WORKSPACE)/MdePkg/Include/AArch64/ProcessorBind.h \
              $(WORKSPACE)/MdePkg/Include/Pi/PiBootMode.h \
              $(WORKSPACE)/MdePkg/Include/Protocol/DevicePath.h \
              $(WORKSPACE)/MdePkg/Include/Pi/PiMultiPhase.h \
              $(WORKSPACE)/MdePkg/Include/PiDxe.h \
              $(WORKSPACE)/MdePkg/Include/Pi/PiS3BootScript.h \
              $(WORKSPACE)/MdePkg/Include/IndustryStandard/Acpi40.h \
              $(WORKSPACE)/MdePkg/Include/Uefi/UefiSpec.h \
              $(WORKSPACE)/MdePkg/Include/IndustryStandard/Acpi60.h \
              $(WORKSPACE)/MdePkg/Include/IndustryStandard/PeImage.h \
              $(WORKSPACE)/MdePkg/Include/Pi/PiDependency.h \
              $(WORKSPACE)/MdePkg/Include/Base.h \
              $(WORKSPACE)/MdePkg/Include/Protocol/DebugSupport.h \
              $(WORKSPACE)/MdePkg/Include/Pi/PiDxeCis.h \
              $(WORKSPACE)/MdePkg/Include/IndustryStandard/Acpi30.h \
              $(WORKSPACE)/MdePkg/Include/Uefi/UefiPxe.h \
              $(WORKSPACE)/MdePkg/Include/Library/DxeServicesLib.h \
              $(WORKSPACE)/MdePkg/Include/IndustryStandard/Acpi50.h \
              $(WORKSPACE)/MdePkg/Include/IndustryStandard/Acpi51.h \
              $(WORKSPACE)/MdePkg/Include/Pi/PiFirmwareFile.h \
              $(WORKSPACE)/MdePkg/Include/Pi/PiHob.h \
              $(WORKSPACE)/MdePkg/Include/IndustryStandard/AcpiAml.h \
              $(WORKSPACE)/MdePkg/Include/Uefi/UefiBaseType.h \
              $(DEBUG_DIR)/AutoGen.h \
              $(WORKSPACE)/MdePkg/Include/IndustryStandard/Bluetooth.h \
              $(WORKSPACE)/MdePkg/Include/Guid/PcAnsi.h \
              $(WORKSPACE)/MdePkg/Include/Uefi/UefiMultiPhase.h \
              $(WORKSPACE)/MdePkg/Include/Protocol/SimpleTextInEx.h \
              $(WORKSPACE)/MdePkg/Include/Protocol/SimpleTextOut.h \
              $(WORKSPACE)/MdePkg/Include/Pi/PiStatusCode.h \
              $(WORKSPACE)/MdePkg/Include/IndustryStandard/Acpi20.h \
              $(WORKSPACE)/MdePkg/Include/Uefi/UefiGpt.h \
              $(WORKSPACE)/MdePkg/Include/Library/UefiBootServicesTableLib.h \
              

#
# Overridable Target Macro Definitions
#
FORCE_REBUILD = force_build
INIT_TARGET = init
PCH_TARGET =
BC_TARGET = 
CODA_TARGET = /home/osboxes/fix_rttee_text/RT-TEE/edk2/Build/ArmVirtQemuKernel-AARCH64/DEBUG_GCC49/AARCH64/MdePkg/Library/DxeServicesLib/DxeServicesLib/OUTPUT/DxeServicesLib.lib \
              

#
# Default target, which will build dependent libraries in addition to source files
#

all: mbuild


#
# Target used when called from platform makefile, which will bypass the build of dependent libraries
#

pbuild: $(INIT_TARGET) $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# ModuleTarget
#

mbuild: $(INIT_TARGET) $(BC_TARGET) gen_libs $(PCH_TARGET) $(CODA_TARGET)

#
# Build Target used in multi-thread build mode, which will bypass the init and gen_libs targets
#

tbuild: $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# Phony target which is used to force executing commands for a target
#
force_build:
	-@

#
# Target to update the FD
#

fds: mbuild gen_fds

#
# Initialization target: print build information and create necessary directories
#
init: info dirs

info:
	-@echo Building ... $(MODULE_DIR)/$(MODULE_FILE) [$(ARCH)]

dirs:
	-@$(MD) $(DEBUG_DIR)
	-@$(MD) $(OUTPUT_DIR)


strdefs:
	-@$(CP) $(DEBUG_DIR)/AutoGen.h $(DEBUG_DIR)/$(MODULE_NAME)StrDefs.h

#
# GenLibsTarget
#
gen_libs:
	@cd $(MODULE_BUILD_DIR)

#
# Build Flash Device Image
#
gen_fds:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BUILD_DIR)/GNUmakefile fds
	@cd $(MODULE_BUILD_DIR)

#
# Individual Object Build Targets
#
$(OUTPUT_DIR)/DxeServicesLib.lib : $(OBJECT_FILES)
$(OUTPUT_DIR)/DxeServicesLib.lib : $(OBJECT_FILES_LIST)
	"$(SLINK)" cr /home/osboxes/fix_rttee_text/RT-TEE/edk2/Build/ArmVirtQemuKernel-AARCH64/DEBUG_GCC49/AARCH64/MdePkg/Library/DxeServicesLib/DxeServicesLib/OUTPUT/DxeServicesLib.lib $(SLINK_FLAGS) @$(OBJECT_FILES_LIST)

$(OUTPUT_DIR)/Allocate.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/Allocate.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/Allocate.obj : $(WORKSPACE)/MdePkg/Library/DxeServicesLib/Allocate.c
	"$(CC)" $(CC_FLAGS) -c -o /home/osboxes/fix_rttee_text/RT-TEE/edk2/Build/ArmVirtQemuKernel-AARCH64/DEBUG_GCC49/AARCH64/MdePkg/Library/DxeServicesLib/DxeServicesLib/OUTPUT/./Allocate.obj $(INC) /home/osboxes/fix_rttee_text/RT-TEE/edk2/MdePkg/Library/DxeServicesLib/Allocate.c

$(OUTPUT_DIR)/DxeServicesLib.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/DxeServicesLib.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Protocol/GraphicsOutput.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Protocol/LoadFile2.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Protocol/DriverDiagnostics.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Protocol/FirmwareVolume2.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Protocol/LoadedImage.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Library/MemoryAllocationLib.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Protocol/DriverBinding.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Protocol/ComponentName2.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Library/UefiLib.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Protocol/SimpleFileSystem.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Protocol/DriverDiagnostics2.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Protocol/DriverConfiguration2.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Protocol/LoadFile.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Protocol/ComponentName.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Protocol/DriverConfiguration.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Library/BaseLib.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Library/DevicePathLib.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Library/DebugLib.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Include/Guid/FileInfo.h
$(OUTPUT_DIR)/DxeServicesLib.obj : $(WORKSPACE)/MdePkg/Library/DxeServicesLib/DxeServicesLib.c
	"$(CC)" $(CC_FLAGS) -c -o /home/osboxes/fix_rttee_text/RT-TEE/edk2/Build/ArmVirtQemuKernel-AARCH64/DEBUG_GCC49/AARCH64/MdePkg/Library/DxeServicesLib/DxeServicesLib/OUTPUT/./DxeServicesLib.obj $(INC) /home/osboxes/fix_rttee_text/RT-TEE/edk2/MdePkg/Library/DxeServicesLib/DxeServicesLib.c



#
# clean all intermediate files
#
clean:
	$(RD) $(OUTPUT_DIR)
		$(RM) AutoGenTimeStamp

#
# clean all generated files
#
cleanall:
	$(RD) $(DEBUG_DIR)
	$(RD) $(OUTPUT_DIR)
	$(RM) *.pdb *.idb > NUL 2>&1
	$(RM) $(BIN_DIR)/$(MODULE_NAME).efi
	$(RM) AutoGenTimeStamp

#
# clean all dependent libraries built
#
cleanlib:
	@cd $(MODULE_BUILD_DIR)

